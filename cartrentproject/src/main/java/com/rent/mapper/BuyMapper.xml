<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.rent.mapper.BuyMapper">
		
	<!-- 렌트차량 구매 -->
	<insert id="rentBuyInsert" parameterType="com.rent.domain.BuyVO" useGeneratedKeys="true" keyProperty="buy_id">
		insert into buy
			(buy_id, id, rent_id, option_name, color, buy_date, counseling_date, name, address, tel, month)
		values (#{buy_id}, #{id}, #{rent_id}, #{option_name}, #{color}, now(), #{counseling_date},
				 #{name}, #{address}, #{tel}, #{month})
	</insert>
	
	<!-- id에 따른 구매목록 -->
	<select id="buyListSId" parameterType="String" resultType="com.rent.domain.BuyVO">
		SELECT	*
		FROM	BUY
		WHERE	ID = #{id}
		AND		MONTH = 0
	</select>
	
	<!-- id에 따른 장기 구매목록 -->
	<select id="buyListId" parameterType="String" resultType="com.rent.domain.BuyVO">
		SELECT	*
		FROM	BUY
		WHERE	ID = #{id}
		AND		MONTH != 0
	</select>
	
	<!-- 렌트 구매자 목록 -->
	<!-- 
	<select id="buyList" parameterType="com.rent.domain.BuyVO" resultType="com.rent.domain.BuyVO">
		select *
		from buy
	</select>
	 -->
	<!-- 렌트 구매자 목록 갯수 -->
	<select id="buyCount" resultType="int">
		select count(*)
		from buy
	</select>
	
	<!-- 페이징 처리 후 렌트 목록 조회 -->
	<select id="buyList" parameterType="com.rent.domain.PagingVO" resultType="com.rent.domain.BuyVO">
		<!-- rownum 사용 -->
		select *
		from (
		select @NO := @NO + 1 AS ROWNUM, A.*
		from
		  (
		    select *
		    from buy
		  ) A,
		  ( select @NO := 0 ) B
		) C
		WHERE C.ROWNUM BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 렌트 구매자 예약 취소 -->
	<delete id="rentBuyDelete" parameterType="int">
		delete from buy
		where buy_id = #{buy_id}
	</delete>
	
	<!-- 예약자 상세조회 -->
	<select id="buyDetail" parameterType="int" resultType="com.rent.domain.BuyVO">
		select *
		from buy
		where buy_id = #{buy_id}
	</select>
	
	<!-- 차량 구매한 사람들의아이디를 가져온다. -->
	<select id="buyListMember" parameterType="String" resultType="com.rent.domain.BuyVO">
		select id
		from buy
		where rent_id = #{rent_id}
	</select>
	
	<!-- 차량 구매한사람들의 아이디로  성별을 나눈다-->
	<select id="memberInformation" parameterType="String" resultType="com.rent.domain.MemberVO">
		select	gender, truncate(date_format(now(),'%Y')-substring(date_of_birth,1,4),0) as date_of_birth,
			count(if(gender = "남자", gender, null)) as man,
			count(if(gender = "여자", gender, null)) as women,
			sum(if(date_format(now(),'%Y')-substring(date_of_birth,1,4) between 20 and 29 , 1, 0)) as twenties,
			sum(if(date_format(now(),'%Y')-substring(date_of_birth,1,4) between 30 and 39 , 1, 0)) as thirties,
			sum(if(date_format(now(),'%Y')-substring(date_of_birth,1,4) between 40 and 49 , 1, 0)) as forties,
			sum(if(date_format(now(),'%Y')-substring(date_of_birth,1,4) between 50 and 59 , 1, 0)) as fifteen,
			sum(if(date_format(now(),'%Y')-substring(date_of_birth,1,4) between 60 and 69 , 1, 0)) as sixties
		from member
		where id = #{id}
	</select>
	
	<select id="getDetail" parameterType="com.rent.domain.BuyVO" resultType="com.rent.domain.BuyVO">
		SELECT	*
		FROM	BUY
		WHERE	TEL = #{tel} and NAME = #{name}
	</select>
	
	<!-- 바이아이디로 리스트 조회 -->
	<select id="buyListBuyId" parameterType="String" resultType="com.rent.domain.BuyVO">
		SELECT	*
		FROM 	BUY
		WHERE	BUY_ID = #{buy_id}
	</select>
	
	<!-- 전화번호로 리스트 조회 -->
	<select id="buyListTel" parameterType="String" resultType="com.rent.domain.BuyVO">
		SELECT	*
		FROM	BUY
		WHERE	TEL = #{tel}
	</select>
	
	<!-- 회원아이디로 구매한 리스트들 출력 -->
	<select id="buyListMemberId" parameterType="String" resultType="com.rent.domain.BuyVO">
		select *
		from buy
		where id = #{id}
	</select>
	
	<!-- 회원탈퇴시 해당아이디에 대한 구매한 정보들을 전부 삭제한다  -->
	<delete id="secessionDelete" parameterType="String">
		delete from buy
		where id = #{id}
	</delete>
</mapper>